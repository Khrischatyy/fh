version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: funny-how-nginx-dev
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api
    networks:
      - funny-how-network
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: funny-how-api-dev
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
      - /app/__pycache__
    expose:
      - "8000"
    env_file:
      - .env
    environment:
      - APP_ENV=development
      - DEBUG=true
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/book_studio
      - REDIS_URL=redis://redis:6379/0
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - db
      - redis
      - rabbitmq
    networks:
      - funny-how-network

  db:
    image: postgres:15-alpine
    container_name: funny-how-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=book_studio
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - funny-how-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: funny-how-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - funny-how-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: funny-how-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - funny-how-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: funny-how-celery-worker
    command: celery -A src.tasks.celery_app worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - APP_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/book_studio
      - REDIS_URL=redis://redis:6379/0
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - db
      - redis
      - rabbitmq
    networks:
      - funny-how-network

networks:
  funny-how-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
